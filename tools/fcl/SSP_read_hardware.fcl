# FHiCL document used to run the "driver" executable. To learn more
#  about the FHiCL language, please look at
#  cdcvs.fnal.gov/redmine/documents/327 , the "FHiCL Quick Start Guide"

events_to_generate: 5000
run_number: 999

fragment_receiver: {

   # Parameters defining and configuring the fragment generator to be used
   		    
# JCF, 1/30/15

# Following is a cut-and-paste of ssp01_hw_cfg.fcl's SSP configuration
#  from the "6xssp_ext_100HzMSlice" configuration

######################################################################

    generator: SSP
      fragment_type: SSP
      fragment_id: 0
      board_id: 0
      interface_type: 1
      board_ip: "192.168.1.108"	
      verbosity: 3

      HardwareConfig:{

        eventDataInterfaceSelect: 0x00000001
      	c2c_control:             0x00000007
	c2c_master_intr_control: 0x00000000
	comm_clock_control:      0x00000001
	comm_led_config:         0x00000000
	comm_led_input:          0x00000000
	qi_dac_config:           0x00000000
	qi_dac_control:          0x00000001

	mon_config:              0x0012F000
	mon_select:              0x00FFFF00
	mon_gpio:                0x00000000
	mon_control:             0x00010001

	module_id:               0x00000001
	c2c_slave_intr_control:  0x00000000

	# ARR_channel_control:    [0x00F0E0C1,
        #                         0x00000000,
        #                         0x00000000,
        #                         0x00000000,
        #                         0x00000000,
        #                         0x00000000,
        #                         0x00000000,
        #                         0x00000000,
        #                         0x00000000,
        #                         0x00000000,
        #                         0x00000000,
        #                         0x00000000]

        #ALL_channel_control:      0x80F00401 #rising edge
        ALL_channel_control:      0x00006001 #front panel
	#ALL_channel_control:      0x00F0E081 #timestamp
           
	ALL_led_threshold:         150
	ALL_cfd_parameters:        0x1800
	ALL_readout_pretrigger:    100
	ALL_readout_window:        2046
	ALL_p_window:              0x20
	ALL_i2_window:             500
	ALL_m1_window:             10
	ALL_m2_window:             10
	ALL_d_window:              20
	ALL_i1_window:             500
	ALL_disc_width:            10
	ALL_baseline_start:        0x0000

        trigger_input_delay:       0x00000020
        gpio_output_width:         0x00001000
        front_panel_config:        0x00001101 # standard config?
        dsp_led_config:            0x00000000
        dsp_led_input:             0x00000000
        baseline_delay:            5
        diag_channel_input:        0x00000000
        qi_config:                 0x0FFF1F00
        qi_delay:                  0x00000000
        qi_pulse_width:            0x00000000
        external_gate_width:       0x00008000
        dsp_clock_control:         0x00000013 # 0x1  - use ext clock to drive ADCs
                                              # 0x2  - use NOvA clock (0 value uses front panel input)
                                              # 0x10 - Enable clock jitter correction

        # dsp_clock_control:         0x00000000 # Use internal clock to drive ADCs, front panel
        #                                        # clock for sync


        ALL_bias_config:           0x00040E21 # 26.5V - bit 0x40000 enables bias, bits 0xFFF set value
        #                                      # in range 0-30V

      }

      DAQConfig:{
        
        MillisliceLength:          5E5
        MillisliceOverlap:         1E5
        UseExternalTimestamp:      1
	StartOnNOvASync:	   1
	EmptyWriteDelay:	   5000000
	HardwareClockRate:	   64
      }

# JCF, 1/30/15, END OF CUT-AND_PASTE
######################################################################

}


event_builder: {

  expected_fragments_per_event: 1
  use_art: true
  print_event_store_stats: false
  verbose: false
  events_expected_in_SimpleQueueReader: @local::events_to_generate
}

######################################################################
# The ART code
######################################################################

physics:
{
  analyzers:
  {

  }

  producers:
  {
    duneArtdaqBuildInfo:
    {
     module_type: LbneArtdaqBuildInfo
    }
  }   


  # p: [ duneArtdaqBuildInfo ] 

  # a1: [ toyDump ]
  # a2: [ app, wf ]

   e1: [ rootout ]

  # end_paths: [ p, a1, e1 ]
end_paths: [ e1 ]
}

outputs:
{
  out1:
  {
    module_type: FileDumperOutput
    wantProductFriendlyClassName: true
  }

  rootout:
  {
    module_type: RootOutput
    fileName: "driver.root"
    compressionLevel: 0
  }

}

source:
{
module_type: RawInput
waiting_time: 900
resume_after_timeout: true
fragment_type_map: [[3, "SSP"] ]
}

process_name: Driver



