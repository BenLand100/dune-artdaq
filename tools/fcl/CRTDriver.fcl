# FHiCL document used to run the "driver" executable. To learn more
#  about the FHiCL language, please look at
#  cdcvs.fnal.gov/redmine/documents/327 , the "FHiCL Quick Start Guide"

events_to_generate: 20
run_number: 101
transition_timeout: 30
debug_cout: false

fragment_receiver: {

  generator: CRTFragGen
  fragment_type: CRT


   fragment_ids: [0]  # In the case of just one fragment, "fragment_id: 0" would also work
   board_id: 999 

  interface_type: 1
  indir: "/nfs/home/np04daq/crt/readout_linux/DataFolder/"

  # Exactly one artdaq process needs to start up the backend, but then
  # all four can read the results
  startbackend: true

  # valid numbers 13, 14 (upstream), 3, 22 (downstream)
  usbnumber: 13

  # Options are "crt_upstream", "crt_downstream", "online_normal_running"
  #sqltable: "board_6_debug"
  sqltable: board_6_debug_16ms


}  		  

event_builder: {

  expected_fragments_per_event: 1
  max_fragment_size_bytes: 100000000
  buffer_count: 10
  use_art: true
  print_event_store_stats: false
  verbose: true
}

######################################################################
# The ART code
######################################################################

physics:
{
  analyzers:
  {
  
  # n.b. if you wish to generate more than one fragment per event, toyDump should be disabled

    toyDump:
    {
      module_type: ToyDump
      raw_data_label: daq
      frag_type: @local::fragment_receiver.fragment_type
      num_adcs_to_show: 10   # Obviously this should be no more than ADC counts per fragment
    }

    printBuildInfo: {
      module_type: PrintBuildInfo 
      buildinfo_module_label: BuildInfo 
      buildinfo_instance_label: DuneArtdaq 
    }

  }

  producers:
  {
    BuildInfo:
    {
     module_type: DuneArtdaqBuildInfo
     instance_name: DuneArtdaq
    }
  }   


  e1: [ out1, rootout ]

  end_paths: [ e1 ]
}

outputs:
{
  out1:
  {
    module_type: FileDumperOutput
    wantProductFriendlyClassName: true
  }

  rootout:
  {
    module_type: RootOutput
    fileName: "CRT.root"
    compressionLevel: 0
  }

}

source:
{
module_type: DuneInput
waiting_time: 900
resume_after_timeout: true
}

process_name: Driver



